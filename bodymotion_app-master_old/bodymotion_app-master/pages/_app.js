import Head from "next/head";
import "../styles/style.scss";
import FullLayout from "../src/layouts/FullLayout";
import { getCookie } from 'cookies-next';
import { useEffect, useState } from 'react';
import React, { Component } from 'react';
import { createContext } from 'react';
import { BACKEND_URL, MAIN_TOKEN } from "../constants/Config";
import { SignJWT, jwtVerify, JWTPayload } from 'jose';

export const UserContext = createContext();


function MyApp({ Component, pageProps }) {
  const [token, setToken] = useState("");
  const [userData, setUserData] = useState({})
  const [loading, setLoading] = useState(true)

  useEffect(() => {
   // const cookie = getCookie("OursiteJWT");
   const cookie = getCookie("token");

    if (cookie != null) {
      handleUserData();
    } else {
      setLoading(false)
    }
  }, [])

  const handleUserData = async () => {
    // const cookie = getCookie("OursiteJWT");
    // var jwt = require('jsonwebtoken');
    //var decoded = jwt.verify(cookie, MAIN_TOKEN);

    //   const { payload } = await jwtVerify(cookie, new TextEncoder().encode(MAIN_TOKEN));
    const cookie = getCookie("token");
    setToken(cookie);

    const response = await fetch(BACKEND_URL + '/user', {
      method: 'GET',
      headers: new Headers({
        'Authorization': 'Bearer ' + cookie,
        'Content-Type': 'application/json',
      }),
    });
    if (response.status == 200) {
      var data = await response.json();
      data = { ...data, token: cookie }
      setUserData(data);
      console.log(data);
    } else {
    }
    setLoading(false);
  }


  return (
    <>
      <Head>
        <title>BodyMotion Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      {!loading &&
        <UserContext.Provider value={userData}>
          <FullLayout>
            <Component {...pageProps} />
          </FullLayout>
        </UserContext.Provider>
      }
    </>
  );
}

export default MyApp;
